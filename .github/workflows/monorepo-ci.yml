name: Monorepo CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  # Master job that depends on all others
  complete:
    name: CI Complete
    runs-on: ubuntu-latest
    needs: [ps-build, ps-test, ps-lint, op-build-test, op-lint]
    steps:
      - name: CI Passed
        run: echo "All CI checks have passed!"
        
  # Proving Service jobs
  ps-build:
    name: PS Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build the Proving Service
        run: cd proving-service && cargo build --verbose

  ps-test:
    name: PS Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@nightly
      - name: Run tests
        run: cd proving-service && cargo test

  ps-lint:
    name: PS Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt, clippy
      - name: Check formatting
        run: cd proving-service && cargo fmt --all --check
      - name: Run clippy
        run: cd proving-service && cargo clippy -- -D warnings
        
  # Offchain Processor jobs
  op-build-test:
    name: OP Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install required dependencies
        run: sudo apt update && sudo apt install -y libomp-dev libopenblas-dev
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@nightly
      - name: Install sqlx-cli
        run: |
          cargo install sqlx-cli
          sqlx --version
      - name: Check that sqlx queries metadata is up to date
        run: cargo sqlx prepare --workspace --check
      - name: Build
        run: cd offchain-processor && cargo build --verbose
      - name: Test
        run: cd offchain-processor && cargo test

  op-lint:
    name: OP Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install required dependencies
        run: sudo apt update && sudo apt install -y libomp-dev libopenblas-dev python3-pip
      - name: Install codespell
        run: |
          pip install codespell
          echo "PATH=$PATH:$HOME/.local/bin" >> $GITHUB_ENV
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt, clippy
      - name: Run formatting check
        run: cd offchain-processor && cargo fmt --all --check
      - name: Run clippy
        run: cd offchain-processor && cargo clippy -- -D warnings 