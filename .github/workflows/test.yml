name: Test

on:
  workflow_call:

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test with Coverage
    runs-on: ubuntu-latest
    # Use a higher resource class for more CPU/memory
    strategy:
      matrix:
        # Split tests into multiple groups
        test-group: [proving, db, other]
      # Don't fail fast so all test groups complete even if one fails
      fail-fast: false
      
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@nightly
      with:
        components: llvm-tools-preview
    
    - name: Install RISC Zero toolchain
      run: |
        # Only run this step for proving tests
        if [ "${{ matrix.test-group }}" = "proving" ]; then
          curl -L https://risczero.com/install | bash
          export PATH="$HOME/.risc0/bin:$PATH"
          rzup install
        fi
    
    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2
      with:
        # Cache more aggressively
        cache-on-failure: true
        # Customize cache key based on test group
        key: ${{ matrix.test-group }}
    
    - name: Install grcov
      # Only install for proving tests where we collect coverage
      if: matrix.test-group == 'proving'
      run: cargo install grcov
      
    - name: Start PostgreSQL
      # Only needed for DB tests
      if: matrix.test-group == 'db'
      run: docker compose -f docker/docker-compose.test.yml up -d postgres
    
    - name: Wait for PostgreSQL to be ready
      # Only needed for DB tests
      if: matrix.test-group == 'db'
      run: |
        for i in {1..30}; do
          if docker exec $(docker ps -q -f name=postgres) pg_isready -U postgres; then
            break
          fi
          sleep 1
        done
    
    - name: Run proving tests
      if: matrix.test-group == 'proving'
      run: |
        mkdir -p .coverage
        CARGO_INCREMENTAL=0 \
        RUSTFLAGS="-C instrument-coverage -C codegen-units=1" \
        LLVM_PROFILE_FILE=".coverage/fossil-%p-%m.profraw" \
        cargo test --package message-handler -- proof_composition::
      
    - name: Run database tests
      if: matrix.test-group == 'db'
      run: |
        # Run only db-related tests
        cargo test --package db
        
    - name: Run other tests
      if: matrix.test-group == 'other'
      run: |
        # Run remaining tests, excluding proving and db
        cargo test --workspace --exclude message-handler --exclude db
      
    - name: Generate coverage report
      if: matrix.test-group == 'proving'
      run: |
        grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" --ignore "tests/*" -o .coverage/lcov.info
        
    - name: Generate coverage badge
      if: matrix.test-group == 'proving'
      run: |
        # Extract coverage percentage from lcov info
        COVERAGE_PCT=$(grep -m 1 "LF:" .coverage/lcov.info | awk '{print $2}')
        COVERAGE_HIT=$(grep -m 1 "LH:" .coverage/lcov.info | awk '{print $2}')
        
        if [ -n "$COVERAGE_PCT" ] && [ -n "$COVERAGE_HIT" ] && [ "$COVERAGE_PCT" -gt 0 ]; then
          COVERAGE=$(awk "BEGIN { printf \"%.1f\", ($COVERAGE_HIT / $COVERAGE_PCT) * 100 }")
          echo "Coverage percentage: $COVERAGE%"
          
          # Determine badge color based on coverage
          if (( $(echo "$COVERAGE < 50" | bc -l) )); then
            COLOR="red"
          elif (( $(echo "$COVERAGE < 70" | bc -l) )); then
            COLOR="yellow"
          elif (( $(echo "$COVERAGE < 90" | bc -l) )); then
            COLOR="green"
          else
            COLOR="brightgreen"
          fi
          
          # Save badge URL to a file for documentation
          echo "https://img.shields.io/badge/coverage-$COVERAGE%25-$COLOR" > .coverage/badge_url.txt
          echo "Coverage badge URL saved to .coverage/badge_url.txt"
        else
          echo "Could not determine coverage percentage"
        fi

    - name: Stop PostgreSQL
      if: always() && matrix.test-group == 'db'
      run: docker compose -f docker/docker-compose.test.yml down 