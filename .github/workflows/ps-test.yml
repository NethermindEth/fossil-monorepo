name: PS Test

on:
  workflow_call:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: ${{ secrets.DATABASE_URL }}

jobs:
  test-proving:
    name: Test with Coverage (proving)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/workflows/composite/ps-test-setup
    
    - name: Install grcov
      run: cargo install grcov
      
    - name: Run proving tests
      run: |
        cd proving-service
        mkdir -p .coverage
        CARGO_INCREMENTAL=0 \
        RUSTFLAGS="-C instrument-coverage -C codegen-units=1" \
        LLVM_PROFILE_FILE=".coverage/fossil-%p-%m.profraw" \
        cargo test --package message-handler
      
    - name: Generate coverage report
      run: |
        cd proving-service
        grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" --ignore "tests/*" -o .coverage/lcov.info
        
    - name: Generate coverage badge
      run: |
        cd proving-service
        # Extract coverage percentage from lcov info
        COVERAGE_PCT=$(grep -m 1 "LF:" .coverage/lcov.info | awk '{print $2}')
        COVERAGE_HIT=$(grep -m 1 "LH:" .coverage/lcov.info | awk '{print $2}')
        
        if [ -n "$COVERAGE_PCT" ] && [ -n "$COVERAGE_HIT" ] && [ "$COVERAGE_PCT" -gt 0 ]; then
          COVERAGE=$(awk "BEGIN { printf \"%.1f\", ($COVERAGE_HIT / $COVERAGE_PCT) * 100 }")
          echo "Coverage percentage: $COVERAGE%"
          
          # Determine badge color based on coverage
          if (( $(echo "$COVERAGE < 50" | bc -l) )); then
            COLOR="red"
          elif (( $(echo "$COVERAGE < 70" | bc -l) )); then
            COLOR="yellow"
          elif (( $(echo "$COVERAGE < 90" | bc -l) )); then
            COLOR="green"
          else
            COLOR="brightgreen"
          fi
          
          # Save badge URL to a file for documentation
          echo "https://img.shields.io/badge/coverage-$COVERAGE%25-$COLOR" > .coverage/badge_url.txt
          echo "Coverage badge URL saved to .coverage/badge_url.txt"
        else
          echo "Could not determine coverage percentage"
        fi

    - name: Stop PostgreSQL
      if: always()
      run: docker compose -f proving-service/docker/docker-compose.test.yml down

  test-db:
    name: Test with Coverage (db)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/workflows/composite/ps-test-setup
    
    - name: Run database tests
      run: cd proving-service && cargo test --package db
        
    - name: Stop PostgreSQL
      if: always()
      run: docker compose -f proving-service/docker/docker-compose.test.yml down
        
  test-other:
    name: Test with Coverage (other)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/workflows/composite/ps-test-setup
    
    - name: Run other tests
      run: cd proving-service && cargo test --workspace --exclude message-handler --exclude db 